name: CI with build-java


on:

  push:
    branches: [ feature/Added-submodule-java-hello-world ]
  pull_request:
    branches: [ feature/Added-submodule-java-hello-world  ]
  
  workflow_run:
    workflows: ["CI init"]
      
      
    types:
      - completed
  


jobs:


  java-job:
  needs: CI init
    runs-on: ubuntu-latest
    if: needs.init.outputs.LANGUAGE_NAME == 'java'
    defaults:
      run:
        working-directory: ./${{needs.init.outputs.LANGUAGE_NAME}}/${{needs.init.outputs.PROJECT_NAME}}

    steps:

      - uses: actions/checkout@v2
      
      - name: Checkout submodules
        uses: srt32/git-actions@v0.0.3
        with:
          args: git submodule update --init --remote ${{needs.init.outputs.LANGUAGE_NAME}}/${{needs.init.outputs.PROJECT_NAME}} 

      - name: check build tool
        id: build-tool
        run: |
            echo "::set-output name=TOOL_NAME::`if [ -f "build.sbt" ]; then
                echo "sbt"
            elif [ -f "build.gradle" ]
            then
                echo "gradle"
            elif [ -f "pom.xml" ]
            then
                echo "maven"
            elif [ -f "build.xml" ]
            then
                echo "ant"
            else 
                echo "javac"
            fi`"

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with sbt
        if: steps.build-tool.outputs.TOOL_NAME == 'sbt'
        run: sbt clean test

      - name: Build with maven
        if: steps.build-tool.outputs.TOOL_NAME == 'maven'
        run: mvn package

      - name: Validate Gradle wrapper
        if: steps.build-tool.outputs.TOOL_NAME == 'gradle'
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Build with gradle
        if: steps.build-tool.outputs.TOOL_NAME == 'gradle'
        run: ./gradlew build

      - name: Build with ant
        if: steps.build-tool.outputs.TOOL_NAME == 'ant'
        run: ant -noinput -buildfile build.xml

      - name: Build with javac
        if: steps.build-tool.outputs.TOOL_NAME == 'javac'
        run: javac src/*.java -d classes